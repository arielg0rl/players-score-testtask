{"version":3,"sources":["components/Empty.tsx","components/PlayersList.tsx","App.tsx","index.js"],"names":["Empty","className","PlayersList","players","useState","sortBy","setSortBy","name","value","onChange","event","target","selected","sort","a","b","score","localeCompare","map","player","src","avatar","alt","App","setPlayers","useEffect","item","window","localStorage","getItem","prev","JSON","parse","stringify","setItem","EventSource","onmessage","data","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAEO,SAASA,IACd,OACE,8BACE,sBAAKC,UAAU,mBAAf,UACE,qBAAKA,UAAU,0BAAf,kCAGA,qBAAKA,UAAU,kDCFhB,IAAMC,EAA+B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7C,EAA8BC,mBAAS,SAAvC,mBAAQC,EAAR,KAAgBC,EAAhB,KAMA,OAAO,sBAAKL,UAAU,cAAf,UACL,sBAAKA,UAAU,sBAAf,UACE,qBAAKA,UAAU,2BAAf,2BACA,yBACAA,UAAU,6BACRM,KAAK,UACLC,MAAOH,EACPI,SAXmB,SAACC,GACxBJ,EAAUI,EAAMC,OAAOH,QAMrB,UAME,wBAAQA,MAAM,QAAQI,UAAQ,EAA9B,mBACA,wBAAQJ,MAAM,OAAd,yBAGS,UAAXH,EAAqBF,EAAQU,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,MAAQF,EAAEE,SACxDb,EAAQU,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEP,KAAKU,cAAcF,EAAER,UAC7CW,KAAI,SAAAC,GACH,OACE,sBAAuBlB,UAAU,sBAAjC,UACE,sBAAKA,UAAU,+BAAf,UACE,qBACEA,UAAU,6BACVmB,IAAKD,EAAOE,OACZC,IAAI,oBAEN,qBAAKrB,UAAU,2BAAf,SAA2CkB,EAAOZ,UAEpD,qBAAKN,UAAU,4BAAf,SAA4CkB,EAAOH,UAT3CG,EAAOZ,aC0BZgB,EAjDc,WAC3B,MAAgCnB,mBAAoB,IAApD,mBAAQD,EAAR,KAAiBqB,EAAjB,KA8BA,OA5BAC,qBAAU,WACR,IAAMC,EAAOC,OAAOC,aAAaC,QAAQ,WACzCL,GAAW,SAACM,GAAD,OAAqBC,KAAKC,MAAMN,GAAcK,KAAKE,UAAUH,SACvE,IAEHL,qBAAU,WACRE,OAAOC,aAAaM,QAAQ,UAAWH,KAAKE,UAAU9B,MACrD,CAACA,IAIJsB,qBAAU,WACY,IAAIU,YAAY,yBAExBC,UAAY,SAAS1B,GAC/Bc,GAAW,SAACM,GAAD,4BAAyBA,GAAzB,CAA+BC,KAAKC,MAAMtB,EAAM2B,cAE5D,IAGHZ,qBAAU,WACY,IAAIU,YAAY,yBAExBC,UAAY,SAAS1B,GAC/Bc,GAAW,SAACM,GAAD,4BAAyBA,GAAzB,CAA+BC,KAAKC,MAAMtB,EAAM2B,cAE5D,CAAClC,IAGF,qBAAKF,UAAU,UAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,UAAd,yBAEGE,EAAQmC,OAIT,cAAC,EAAD,CAAanC,QAASA,IAFtB,cAACH,EAAD,YC3CZuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.625b421b.chunk.js","sourcesContent":["import React from \"react\"\n\nexport function Empty() {\n  return (\n    <div>\n      <div className=\"EmptyplayersList\">\n        <div className=\"EmptyplayersList--empty\">\n          no players available\n        </div>\n        <div className=\"EmptyplayersList__loadIcon rotate-center\"></div>\n      </div>\n    </div>\n  )\n}\n\n","import React, { useState } from \"react\"\nimport { IPlayer } from \"../types\"\n\nexport interface Props {\n  players: IPlayer[];\n}\n\nexport const PlayersList: React.FC<Props> = ({ players }) => {\n  const [ sortBy, setSortBy ] = useState('Score');\n\n  const handleSortChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSortBy(event.target.value);\n  }\n\n  return <div className=\"playersList\">\n    <div className=\"playersList__header\">\n      <div className=\"playersList__header-name\">Player's name</div>\n      <select\n      className=\"playersList__header-select\"\n        name=\"Sort by\"\n        value={sortBy}\n        onChange={handleSortChange}\n      >\n        <option value=\"Score\" selected>Score</option>\n        <option value=\"Name\">Name</option>\n      </select>\n    </div>\n    {(sortBy === 'Score' ? players.sort((a, b) => b.score - a.score)\n    : players.sort((a, b) => a.name.localeCompare(b.name)))\n      .map(player => {\n        return (\n          <div key={player.name} className=\"playersList__Player\">\n            <div className=\"playersList__Player-ava-name\">\n              <img\n                className=\"playersList__Player-avatar\"\n                src={player.avatar}\n                alt=\"player's avatar\"\n              />\n              <div className=\"playersList__Player-name\">{player.name}</div>\n            </div>\n            <div className=\"playersList__Player-score\">{player.score}</div>\n          </div>\n        )\n      })\n    }\n  </div>\n}\n","import React, { useState, useEffect } from 'react';\n\nimport './App.css';\n\nimport { Empty } from './components/Empty';\nimport { PlayersList } from './components/PlayersList';\nimport { IPlayer } from './types';\n\nexport const App: React.FC = () => {\n  const [ players, setPlayers ] = useState<IPlayer[]>([]);\n\n  useEffect(() => {\n    const item = window.localStorage.getItem('players');\n    setPlayers((prev: IPlayer[]) => JSON.parse(item ? item : JSON.stringify(prev)));\n  }, []);\n\n  useEffect(() => {\n    window.localStorage.setItem('players', JSON.stringify(players));\n  }, [players]);\n\n\n\n  useEffect(() => {\n    const eventSource = new EventSource('http://localhost:5000');\n\n    eventSource.onmessage = function(event) {\n      setPlayers((prev: IPlayer[]) => [...prev, JSON.parse(event.data)]);\n    }\n  }, [])\n\n\n  useEffect(() => {\n    const eventSource = new EventSource('http://localhost:5000');\n\n    eventSource.onmessage = function(event) {\n      setPlayers((prev: IPlayer[]) => [...prev, JSON.parse(event.data)]);\n    }\n  }, [players])\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"App\">\n        <div className=\"container\">\n          <h1 className=\"App__h1\">Score board</h1>\n          {\n            !players.length\n            ?\n            <Empty />\n            :\n            <PlayersList players={players}/>\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.tsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}