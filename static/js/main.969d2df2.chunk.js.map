{"version":3,"sources":["components/Description.tsx","components/Empty.tsx","components/PlayersList.tsx","App.tsx","index.js"],"names":["Description","onClose","player","navigate","useNavigate","handleClose","ReactDom","createPortal","style","position","top","width","height","onKeyPress","onClick","className","src","avatar","alt","name","score","bio","document","getElementById","Empty","PlayersList","onSelect","players","useState","sortBy","setSortBy","scoreLeader","setScoreLeader","addNewLeaderStyle","setAddNewLeaderStyle","useEffect","newBoard","sort","player1","player2","setTimeout","value","onChange","event","target","selected","a","b","localeCompare","map","i","textDecoration","to","split","join","classNames","length","App","setPlayers","selectedPlayer","setSelectedPlayer","item","window","localStorage","getItem","prev","JSON","parse","stringify","setItem","EventSource","onmessage","data","playerFromEvent","path","element","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.969d2df2.chunk.js","sourcesContent":["import React, { } from \"react\";\nimport ReactDom from 'react-dom';\nimport { IPlayer } from \"../types\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport interface Props {\n  player: IPlayer;\n  onClose: () => void;\n}\n\nexport const Description: React.FC<Props> = ({ onClose, player }) => {\n  const navigate = useNavigate();\n\n  const handleClose = () => {\n    navigate('/');\n    onClose();\n  }\n\n  return ReactDom.createPortal(\n    <>\n      <div\n        style={{ position: 'absolute', top: '0', width: '100vw', height: '100vh' }}\n        onKeyPress={() => handleClose()}\n        onClick={() => handleClose()}\n      >\n      </div>\n      <div className=\"wrapper\">\n        <div>\n          <div className=\"description\">\n            <div className=\"description__player-wrapper\">\n              <img\n                className=\"description__avatar\"\n                src={player.avatar}\n                alt=\"player's avatar\"\n                />\n              <div className=\"description__name\">{player.name}</div>\n              <div className=\"description__score\">Score: {player.score}</div>\n              <div className=\"description__bio\">{player.bio}</div>\n            </div>\n            <button\n              className=\"description__button\"\n              onKeyPress={() => handleClose()}\n              onClick={() => handleClose()}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n,\n    document.getElementById(\"portal\")!\n  )\n}\n\nexport default Description\n","import React from \"react\"\n\nexport function Empty() {\n  return (\n    <div>\n      <div className=\"EmptyplayersList\">\n        <div className=\"EmptyplayersList--empty\">\n          no players available\n        </div>\n        <div className=\"EmptyplayersList__loadIcon rotate-center\"></div>\n      </div>\n    </div>\n  )\n}\n\n","import React, { useEffect, useState } from \"react\"\nimport { IPlayer } from \"../types\"\nimport { Link } from 'react-router-dom';\nimport classNames from \"classnames\";\n\nexport interface Props {\n  players: IPlayer[];\n  onSelect: (playerFromEvent: IPlayer) => void;\n}\n\nexport const PlayersList: React.FC<Props> = ({ onSelect, players }) => {\n  const [ sortBy, setSortBy ] = useState<string>('Score');\n  const [ scoreLeader, setScoreLeader ] = useState<IPlayer>();\n  const [ addNewLeaderStyle, setAddNewLeaderStyle ] = useState<boolean>(false);\n\n  useEffect(() => {\n    const newBoard = players.sort((player1, player2) => player2.score - player1.score);\n    if (newBoard[0].name === scoreLeader?.name) {\n      return;\n    }\n\n    setScoreLeader(newBoard[0]);\n  }, [players])\n\n  useEffect(() => {\n    setAddNewLeaderStyle(true);\n\n    setTimeout(() => {\n      setAddNewLeaderStyle(false);\n    }, 1000)\n\n  }, [scoreLeader]);\n\n  const handleSortChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSortBy(event.target.value);\n  }\n\n  return (\n    <div className=\"playersList\">\n      <div className=\"playersList__header\">\n        <div className=\"playersList__header-name\">Player's name</div>\n        <select\n        className=\"playersList__header-select\"\n          name=\"Sort by\"\n          value={sortBy}\n          onChange={handleSortChange}\n        >\n          <option value=\"Score\" selected>Score</option>\n          <option value=\"Name\">Name</option>\n        </select>\n      </div>\n      {(sortBy === 'Score' ? players.sort((a, b) => b.score - a.score)\n      : players.sort((a, b) => a.name.localeCompare(b.name)))\n        .map((player, i) => {\n          return (\n            <Link style={{ textDecoration: 'none' }} to={`/player/${player.name.split(' ').join('_')}`}>\n              <div\n                onClick={(): void => {\n                  onSelect(player)\n                }}\n                key={player.name}\n                className={classNames('playersList__Player', {'playersList__Player--highlighted': (addNewLeaderStyle && i === 0)}, {'playersList__Player--highlighted--first': (players.length === 1)})}\n              >\n              <div className=\"playersList__Player-ava-name\">\n                <img\n                  className=\"playersList__Player-avatar\"\n                  src={player.avatar}\n                  alt=\"player's avatar\"\n                />\n                <div className=\"playersList__Player-name\">{player.name}</div>\n              </div>\n              <div className=\"playersList__Player-score\">{player.score}</div>\n              </div>\n            </Link>\n          )\n        })\n      }\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport Description from './components/Description';\nimport classNames from 'classnames';\n\nimport './App.scss';\n\nimport { Empty } from './components/Empty';\nimport { PlayersList } from './components/PlayersList';\nimport { IPlayer } from './types';\nimport { Route, Routes } from 'react-router';\n\n\nexport const App: React.FC = () => {\n  const [ players, setPlayers ] = useState<IPlayer[]>([]);\n  const [ selectedPlayer, setSelectedPlayer ] = useState<IPlayer | null>()\n\n  useEffect(() => {\n    const item = window.localStorage.getItem('players');\n    setPlayers((prev: IPlayer[]) => JSON.parse(item ? item : JSON.stringify(prev)));\n  }, []);\n\n  useEffect(() => {\n    window.localStorage.setItem('players', JSON.stringify(players));\n  }, [players]);\n\n  useEffect(() => {\n    const eventSource = new EventSource('http://localhost:5000');\n\n    eventSource.onmessage = function(event) {\n      setPlayers((prev: IPlayer[]) => [...prev, JSON.parse(event.data)]);\n    }\n  }, [])\n\n  const choosePlayer = (playerFromEvent: IPlayer): void => {\n    setSelectedPlayer(playerFromEvent);\n  }\n  \n  const onClose = () => {\n    setSelectedPlayer(null);\n  }\n\n  return (\n    <div className={classNames(\"wrapper\", {\"wrapper-blured\": selectedPlayer})}>\n      <div className=\"App\">\n        <div className=\"container\">\n          <h1 className=\"App__h1\">Score board</h1>\n          {\n            !players.length\n            ?\n            <Empty />\n            :\n            <PlayersList onSelect={choosePlayer} players={players}/>\n          }\n          {selectedPlayer && (\n          <Routes>\n            <Route\n              path={`/player/${selectedPlayer?.name.split(' ').join('_')}`}\n              element={(<Description onClose={onClose} player={selectedPlayer as IPlayer} />)}\n            />\n          </Routes>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App.tsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}